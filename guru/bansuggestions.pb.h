// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bansuggestions.proto

#ifndef PROTOBUF_bansuggestions_2eproto__INCLUDED
#define PROTOBUF_bansuggestions_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace guru {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_bansuggestions_2eproto();
void protobuf_AssignDesc_bansuggestions_2eproto();
void protobuf_ShutdownFile_bansuggestions_2eproto();

class BanSuggestions;
class BanSuggestions_Suggestion;

// ===================================================================

class BanSuggestions_Suggestion : public ::google::protobuf::Message {
 public:
  BanSuggestions_Suggestion();
  virtual ~BanSuggestions_Suggestion();
  
  BanSuggestions_Suggestion(const BanSuggestions_Suggestion& from);
  
  inline BanSuggestions_Suggestion& operator=(const BanSuggestions_Suggestion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BanSuggestions_Suggestion& default_instance();
  
  void Swap(BanSuggestions_Suggestion* other);
  
  // implements Message ----------------------------------------------
  
  BanSuggestions_Suggestion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BanSuggestions_Suggestion& from);
  void MergeFrom(const BanSuggestions_Suggestion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 championId = 1;
  inline bool has_championid() const;
  inline void clear_championid();
  static const int kChampionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 championid() const;
  inline void set_championid(::google::protobuf::uint32 value);
  
  // required double winrate = 2;
  inline bool has_winrate() const;
  inline void clear_winrate();
  static const int kWinrateFieldNumber = 2;
  inline double winrate() const;
  inline void set_winrate(double value);
  
  // required uint32 totalGames = 3;
  inline bool has_totalgames() const;
  inline void clear_totalgames();
  static const int kTotalGamesFieldNumber = 3;
  inline ::google::protobuf::uint32 totalgames() const;
  inline void set_totalgames(::google::protobuf::uint32 value);
  
  // optional double popularity = 4;
  inline bool has_popularity() const;
  inline void clear_popularity();
  static const int kPopularityFieldNumber = 4;
  inline double popularity() const;
  inline void set_popularity(double value);
  
  // @@protoc_insertion_point(class_scope:guru.BanSuggestions.Suggestion)
 private:
  inline void set_has_championid();
  inline void clear_has_championid();
  inline void set_has_winrate();
  inline void clear_has_winrate();
  inline void set_has_totalgames();
  inline void clear_has_totalgames();
  inline void set_has_popularity();
  inline void clear_has_popularity();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double winrate_;
  ::google::protobuf::uint32 championid_;
  ::google::protobuf::uint32 totalgames_;
  double popularity_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_bansuggestions_2eproto();
  friend void protobuf_AssignDesc_bansuggestions_2eproto();
  friend void protobuf_ShutdownFile_bansuggestions_2eproto();
  
  void InitAsDefaultInstance();
  static BanSuggestions_Suggestion* default_instance_;
};
// -------------------------------------------------------------------

class BanSuggestions : public ::google::protobuf::Message {
 public:
  BanSuggestions();
  virtual ~BanSuggestions();
  
  BanSuggestions(const BanSuggestions& from);
  
  inline BanSuggestions& operator=(const BanSuggestions& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BanSuggestions& default_instance();
  
  void Swap(BanSuggestions* other);
  
  // implements Message ----------------------------------------------
  
  BanSuggestions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BanSuggestions& from);
  void MergeFrom(const BanSuggestions& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef BanSuggestions_Suggestion Suggestion;
  
  // accessors -------------------------------------------------------
  
  // repeated .guru.BanSuggestions.Suggestion suggestions = 1;
  inline int suggestions_size() const;
  inline void clear_suggestions();
  static const int kSuggestionsFieldNumber = 1;
  inline const ::guru::BanSuggestions_Suggestion& suggestions(int index) const;
  inline ::guru::BanSuggestions_Suggestion* mutable_suggestions(int index);
  inline ::guru::BanSuggestions_Suggestion* add_suggestions();
  inline const ::google::protobuf::RepeatedPtrField< ::guru::BanSuggestions_Suggestion >&
      suggestions() const;
  inline ::google::protobuf::RepeatedPtrField< ::guru::BanSuggestions_Suggestion >*
      mutable_suggestions();
  
  // @@protoc_insertion_point(class_scope:guru.BanSuggestions)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::guru::BanSuggestions_Suggestion > suggestions_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_bansuggestions_2eproto();
  friend void protobuf_AssignDesc_bansuggestions_2eproto();
  friend void protobuf_ShutdownFile_bansuggestions_2eproto();
  
  void InitAsDefaultInstance();
  static BanSuggestions* default_instance_;
};
// ===================================================================


// ===================================================================

// BanSuggestions_Suggestion

// required uint32 championId = 1;
inline bool BanSuggestions_Suggestion::has_championid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BanSuggestions_Suggestion::set_has_championid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BanSuggestions_Suggestion::clear_has_championid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BanSuggestions_Suggestion::clear_championid() {
  championid_ = 0u;
  clear_has_championid();
}
inline ::google::protobuf::uint32 BanSuggestions_Suggestion::championid() const {
  return championid_;
}
inline void BanSuggestions_Suggestion::set_championid(::google::protobuf::uint32 value) {
  set_has_championid();
  championid_ = value;
}

// required double winrate = 2;
inline bool BanSuggestions_Suggestion::has_winrate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BanSuggestions_Suggestion::set_has_winrate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BanSuggestions_Suggestion::clear_has_winrate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BanSuggestions_Suggestion::clear_winrate() {
  winrate_ = 0;
  clear_has_winrate();
}
inline double BanSuggestions_Suggestion::winrate() const {
  return winrate_;
}
inline void BanSuggestions_Suggestion::set_winrate(double value) {
  set_has_winrate();
  winrate_ = value;
}

// required uint32 totalGames = 3;
inline bool BanSuggestions_Suggestion::has_totalgames() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BanSuggestions_Suggestion::set_has_totalgames() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BanSuggestions_Suggestion::clear_has_totalgames() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BanSuggestions_Suggestion::clear_totalgames() {
  totalgames_ = 0u;
  clear_has_totalgames();
}
inline ::google::protobuf::uint32 BanSuggestions_Suggestion::totalgames() const {
  return totalgames_;
}
inline void BanSuggestions_Suggestion::set_totalgames(::google::protobuf::uint32 value) {
  set_has_totalgames();
  totalgames_ = value;
}

// optional double popularity = 4;
inline bool BanSuggestions_Suggestion::has_popularity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BanSuggestions_Suggestion::set_has_popularity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BanSuggestions_Suggestion::clear_has_popularity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BanSuggestions_Suggestion::clear_popularity() {
  popularity_ = 0;
  clear_has_popularity();
}
inline double BanSuggestions_Suggestion::popularity() const {
  return popularity_;
}
inline void BanSuggestions_Suggestion::set_popularity(double value) {
  set_has_popularity();
  popularity_ = value;
}

// -------------------------------------------------------------------

// BanSuggestions

// repeated .guru.BanSuggestions.Suggestion suggestions = 1;
inline int BanSuggestions::suggestions_size() const {
  return suggestions_.size();
}
inline void BanSuggestions::clear_suggestions() {
  suggestions_.Clear();
}
inline const ::guru::BanSuggestions_Suggestion& BanSuggestions::suggestions(int index) const {
  return suggestions_.Get(index);
}
inline ::guru::BanSuggestions_Suggestion* BanSuggestions::mutable_suggestions(int index) {
  return suggestions_.Mutable(index);
}
inline ::guru::BanSuggestions_Suggestion* BanSuggestions::add_suggestions() {
  return suggestions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::guru::BanSuggestions_Suggestion >&
BanSuggestions::suggestions() const {
  return suggestions_;
}
inline ::google::protobuf::RepeatedPtrField< ::guru::BanSuggestions_Suggestion >*
BanSuggestions::mutable_suggestions() {
  return &suggestions_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace guru

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bansuggestions_2eproto__INCLUDED
