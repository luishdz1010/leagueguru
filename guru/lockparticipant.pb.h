// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lockparticipant.proto

#ifndef PROTOBUF_lockparticipant_2eproto__INCLUDED
#define PROTOBUF_lockparticipant_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace guru {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_lockparticipant_2eproto();
void protobuf_AssignDesc_lockparticipant_2eproto();
void protobuf_ShutdownFile_lockparticipant_2eproto();

class LockParticipant;

// ===================================================================

class LockParticipant : public ::google::protobuf::Message {
 public:
  LockParticipant();
  virtual ~LockParticipant();
  
  LockParticipant(const LockParticipant& from);
  
  inline LockParticipant& operator=(const LockParticipant& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LockParticipant& default_instance();
  
  void Swap(LockParticipant* other);
  
  // implements Message ----------------------------------------------
  
  LockParticipant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LockParticipant& from);
  void MergeFrom(const LockParticipant& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 participant = 1;
  inline bool has_participant() const;
  inline void clear_participant();
  static const int kParticipantFieldNumber = 1;
  inline ::google::protobuf::uint32 participant() const;
  inline void set_participant(::google::protobuf::uint32 value);
  
  // optional uint32 championId = 2;
  inline bool has_championid() const;
  inline void clear_championid();
  static const int kChampionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 championid() const;
  inline void set_championid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:guru.LockParticipant)
 private:
  inline void set_has_participant();
  inline void clear_has_participant();
  inline void set_has_championid();
  inline void clear_has_championid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 participant_;
  ::google::protobuf::uint32 championid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_lockparticipant_2eproto();
  friend void protobuf_AssignDesc_lockparticipant_2eproto();
  friend void protobuf_ShutdownFile_lockparticipant_2eproto();
  
  void InitAsDefaultInstance();
  static LockParticipant* default_instance_;
};
// ===================================================================


// ===================================================================

// LockParticipant

// required uint32 participant = 1;
inline bool LockParticipant::has_participant() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LockParticipant::set_has_participant() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LockParticipant::clear_has_participant() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LockParticipant::clear_participant() {
  participant_ = 0u;
  clear_has_participant();
}
inline ::google::protobuf::uint32 LockParticipant::participant() const {
  return participant_;
}
inline void LockParticipant::set_participant(::google::protobuf::uint32 value) {
  set_has_participant();
  participant_ = value;
}

// optional uint32 championId = 2;
inline bool LockParticipant::has_championid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LockParticipant::set_has_championid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LockParticipant::clear_has_championid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LockParticipant::clear_championid() {
  championid_ = 0u;
  clear_has_championid();
}
inline ::google::protobuf::uint32 LockParticipant::championid() const {
  return championid_;
}
inline void LockParticipant::set_championid(::google::protobuf::uint32 value) {
  set_has_championid();
  championid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace guru

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lockparticipant_2eproto__INCLUDED
